<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rui Marques, Software Engineer and DevOps enthusiast</title>
    <link>https://ruimarques.io/</link>
    <description>Recent content on Rui Marques, Software Engineer and DevOps enthusiast</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ruimarques.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Service telemetry with Grafana and InfluxDB - Part I: Introduction</title>
      <link>https://ruimarques.io/blog/service-telemetry-with-grafana-and-influxdb-part-i-introduction/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ruimarques.io/blog/service-telemetry-with-grafana-and-influxdb-part-i-introduction/</guid>
      <description>Introduction  This is the first post from a four-part series that will take you through the basic concepts, building the development environment and a production ready solution for real-time metrics for any application/service.
SPOILER: At the end of these series you&amp;rsquo;ll be able to deliver a production ready metrics system and build great dashboards with Grafana with an InfluxDB back-end.
 Sneak-peek Starting a somewhat basic example that we&amp;rsquo;ll explore during this series:</description>
    </item>
    
  </channel>
</rss>