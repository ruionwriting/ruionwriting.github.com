<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web development | RuiOnWriting.NET]]></title>
  <link href="http://ruionwriting.net/blog/categories/web-development/atom.xml" rel="self"/>
  <link href="http://ruionwriting.net/"/>
  <updated>2014-04-17T15:08:14+01:00</updated>
  <id>http://ruionwriting.net/</id>
  <author>
    <name><![CDATA[Rui Marques]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Device Emulation with Google Chrome Dev/Canary]]></title>
    <link href="http://ruionwriting.net/blog/2014/03/01/device-emulation-with-google-chrome-dev-slash-canary/"/>
    <updated>2014-03-01T11:44:00+00:00</updated>
    <id>http://ruionwriting.net/blog/2014/03/01/device-emulation-with-google-chrome-dev-slash-canary</id>
    <content type="html"><![CDATA[<p>This week, after seeing a snapshot that my friend ‘led’ posted on Facebook about some mobile tests for one of his projects, I’ve noticed about a certain device emulation feature  on Chrome developer tools. Hum…. that is interesting.</p>

<p>A simple Google search directed me right away for something I’ve already was aware but with some new funky stuff: </p>

<ul>
  <li>
    <p><a href="https://developers.google.com/chrome-developer-tools/docs/mobile-emulation">Chrome DevTools, Mobile Emulation</a></p>
  </li>
  <li>
    <p><a href="http://www.chromium.org/getting-involved/dev-channel">Chrome Release Channels</a></p>
  </li>
</ul>

<p>After the sexy photo we’ll get on how to install Chrome Canary build on Windows 8 and Chrome Dev on Arch Linux.</p>

<!-- more -->

<h2 id="nokia-lumia-emulation-in-action">Nokia Lumia emulation in action</h2>

<p>A simple example on Windows 8:</p>

<p><img class="center" src="/images/2014-03-01_canary_on_windows.png" title="Nokia Lumia emulation" ></p>

<h2 id="installing-canary-build-on-windows">Installing Canary Build on Windows</h2>

<p>Canary Build run side-by-side with your existing Chrome installation. </p>

<h3 id="using-chocolatey-cant-get-more-sweet">Using Chocolatey (can’t get more sweet)</h3>

<p>Google Chrome Canary is available through <a href="http://chocolatey.org/packages?q=canary">Chocolatey</a>, so simply install it using <code>cinst</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>c:&amp;gt; cinst GoogleChrome.Canary
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you using Windows and you don’t know what <a href="http://chocolatey.org/">Chocolatey</a> is you are missing all the fun.</p>

<h3 id="regular-download">Regular Download</h3>

<p>Simply <a href="https://www.google.com/intl/en/chrome/browser/canary.html">download</a> Chrome Canary run the installer.</p>

<h2 id="installing-chrome-dev-on-arch-linuxlinux">Installing Chrome Dev on Arch Linux/linux</h2>

<p>Chrome Dev run side-by-side with your existing Chromium installation. </p>

<p>This is my distro of choice but for any other popular like Debian based get the packages from <a href="http://www.chromium.org/getting-involved/dev-channel">Chrome Release Channels</a>.</p>

<p><code>google-chrome-dev</code> is available through <a href="https://aur.archlinux.org/">AUR</a>, so simply install it using <a href="https://wiki.archlinux.org/index.php/yaourt">yaourt</a>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yaourt -S google-chrome-dev
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2 id="enabling-emulation">Enabling Emulation</h2>

<p>Enable the emulation panel following simple <a href="https://developers.google.com/chrome-developer-tools/docs/mobile-emulation#enable-emulation-panel">instructions</a>.</p>

<h2 id="final-thoughts">Final Thoughts</h2>

<p>On this mobile era a lot of new tools for assisting web developers are arising. Could be a real challenge making compliant web sites/apps across the most popular devices. Having access to a good amount of devices at the same time for pre-launch tests/QA that also is usually a challenge. New tools are always welcome. </p>

<p>Thank you Google for continuing to give back cool tools for the comunity and thank you ‘led’ for the ‘tip’.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Handling ASP.NET PostBacks with URL Rewriting]]></title>
    <link href="http://ruionwriting.net/blog/2013/10/01/handling-asp-dot-net-postbacks-with-url-rewriting/"/>
    <updated>2013-10-01T22:18:00+01:00</updated>
    <id>http://ruionwriting.net/blog/2013/10/01/handling-asp-dot-net-postbacks-with-url-rewriting</id>
    <content type="html"><![CDATA[<p>Recently a collegue develop crossed with this strange error <strong><em>Validation of viewstate MAC failed…</em></strong> when posting a contacts form. Strangely the error only happened when using the re-written url off the contacts page (<code>contacts/</code>), calling <code>contacts.aspx</code> directly worked flawlessly. This is a C# port based on ScottGu’s <a href="http://weblogs.asp.net/scottgu/archive/2007/02/26/tip-trick-url-rewriting-with-asp-net.aspx">solution</a>.<!-- more --></p>

<p>A few minutes after I’ve remembered that I had to strugle with this issue when implementing a website using url-rewriting with <a href="http://iirf.codeplex.com/">IIRF</a> (it was a requirement). The problem is that when using url-rewriting the <code>&lt;form&gt;</code> control does not render the proper url but the re-written one. The solution is to write a form control adapter and I found, at the time I had the problem, the right solution from ScottGu’s. Since my language of choice is C# I’m going to share the solution right here:</p>

<h2 id="step-1">Step 1</h2>
<p><strong>Create a FormRewriterControlAdapter class</strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>FormRewriterControlAdapter.cs </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Data</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Configuration</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.Security</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI.HtmlControls</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI.WebControls</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI.WebControls.WebParts</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Xml.Linq</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">public</span> <span class="k">class</span> <span class="nc">FormRewriterControlAdapter</span> <span class="p">:</span> <span class="n">System</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">UI</span><span class="p">.</span><span class="n">Adapters</span><span class="p">.</span><span class="n">ControlAdapter</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">Render</span><span class="p">(</span><span class="n">HtmlTextWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">Render</span><span class="p">(</span><span class="k">new</span> <span class="n">RewriteFormHtmlTextWriter</span><span class="p">(</span><span class="n">writer</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">public</span> <span class="k">class</span> <span class="nc">RewriteFormHtmlTextWriter</span> <span class="p">:</span> <span class="n">HtmlTextWriter</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">RewriteFormHtmlTextWriter</span><span class="p">(</span><span class="n">HtmlTextWriter</span> <span class="n">writer</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">InnerWriter</span> <span class="p">=</span> <span class="n">writer</span><span class="p">.</span><span class="n">InnerWriter</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">public</span> <span class="n">RewriteFormHtmlTextWriter</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">TextWriter</span> <span class="n">writer</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span> <span class="p">(</span><span class="n">writer</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">base</span><span class="p">.</span><span class="n">InnerWriter</span> <span class="p">=</span> <span class="n">writer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">WriteAttribute</span><span class="p">(</span><span class="kt">string</span> <span class="n">name</span><span class="p">,</span> <span class="kt">string</span> <span class="k">value</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">fEncode</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// If the attribute we are writing is the &quot;action&quot; attribute, and we are not on a sub-control,</span>
</span><span class='line'>    <span class="c1">// then replace the value to write with the raw URL of the request - which ensures that we&#39;ll</span>
</span><span class='line'>    <span class="c1">// preserve the PathInfo value on postback scenarios</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="p">==</span> <span class="s">&quot;action&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">HttpContext</span> <span class="n">context</span> <span class="p">=</span> <span class="n">HttpContext</span><span class="p">.</span><span class="n">Current</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">context</span><span class="p">.</span><span class="n">Items</span><span class="p">[</span><span class="s">&quot;ActionAlreadyWritten&quot;</span><span class="p">]</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// Because we are using an url reweriting HttpModule, we will use the</span>
</span><span class='line'>            <span class="c1">// Request.RawUrl property within ASP.NET to retrieve the origional URL</span>
</span><span class='line'>            <span class="c1">// before it was re-written.  You&#39;ll want to change the line of code below</span>
</span><span class='line'>            <span class="c1">// if you use a different URL rewriting implementation.</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// value = context.Request.RawUrl;</span>
</span><span class='line'>            <span class="k">value</span> <span class="p">=</span> <span class="n">context</span><span class="p">.</span><span class="n">Request</span><span class="p">.</span><span class="n">ServerVariables</span><span class="p">[</span><span class="s">&quot;HTTP_X_REWRITE_URL&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Indicate that we&#39;ve already rewritten the &amp;lt;form&amp;gt;&#39;s action attribute to prevent</span>
</span><span class='line'>            <span class="c1">// us from rewriting a sub-control under the &amp;lt;form&amp;gt; control</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">context</span><span class="p">.</span><span class="n">Items</span><span class="p">[</span><span class="s">&quot;ActionAlreadyWritten&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">base</span><span class="p">.</span><span class="n">WriteAttribute</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="k">value</span><span class="p">,</span> <span class="n">fEncode</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</code></pre>

<h2 id="step-2">Step 2</h2>
<p><strong>Add adapter to App_Browsers</strong></p>

<ol>
  <li>Add <code>ASP.NET</code> folder if it does not exists;</li>
  <li>Create <code>Form.browser</code>:</li>
</ol>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Form.browser </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;browsers&gt;</span>
</span><span class='line'>    <span class="nt">&lt;browser</span> <span class="na">refid=</span><span class="s">&quot;Default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;controladapters&gt;</span>
</span><span class='line'>            <span class="nt">&lt;adapter</span> <span class="na">controltype=</span><span class="s">&quot;System.Web.UI.HtmlControls.HtmlForm&quot;</span> <span class="na">adaptertype=</span><span class="s">&quot;FormRewriterControlAdapter&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/controladapters&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/browser&gt;</span>
</span><span class='line'><span class="nt">&lt;/browsers&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I hope you’ll find this information useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The best web application framework utopia]]></title>
    <link href="http://ruionwriting.net/blog/2013/09/24/the-best-web-application-framework-utopia/"/>
    <updated>2013-09-24T20:42:00+01:00</updated>
    <id>http://ruionwriting.net/blog/2013/09/24/the-best-web-application-framework-utopia</id>
    <content type="html"><![CDATA[<p>Many times I found IT professionals, in particular programmers, arguing about what is the best technology to adopt for a certain project or for all projects for a specific company. As a web developer with several years getting the hands dirty with .NET development I found myself frequently observing (or getting in to) discussions about the subject. I really try to avoid to get in the middle… Ok! Not really :P<!-- more --></p>

<p>The truth is that, most of the time, is hard to move away without throwing our own perspective. I did that the past and I admit that I was a bit fundamentalist defending my own perspective.</p>

<h2 id="discussions-like-what-is-best-php-or-aspnet-are-as-common-as-useless">Discussions like “what is best PHP or ASP.NET?” are as common as useless.</h2>
<p>The more I learn the more I say that all technologies, in this case web frameworks, have pro’s and conn’s and that we must choose the best having the focus on the task and on the result we want to achieve.</p>

<h2 id="for-me-aspnet-is-the-best-continue-reading-please">For me ASP.NET is the best (continue reading please)</h2>
<p>Naturally because is the one I use every day. I’ve already tried others like Java or PHP but I really like the way we can develop everything using a great IDE like Visual Studio and all the nice features that .NET ecosystem (web, desktop, services, etc) delivers. I love C# and with .NET I can do almost everything, core and services, with it.</p>

<h2 id="so-what-is-the-best-one">So what is the best one?</h2>
<p>The are so many of them, use the one that serves you better. The most used (Perl, PHP, Java, Python, Ruby, CFML, ASP, ASP.NET, etc) have great projects and platforms well known by everyone, so if a great project is using a certain technology and it works the way it is suppose to then is using the right technology, not necessarily the best but certainly the one that performs the job.</p>

<p>A simple equation:</p>

<p><code>secure + cost effective + well documented + well supported + good performance + flexible/extensible = the right choice</code></p>
]]></content>
  </entry>
  
</feed>
