<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RuiOnWriting.NET]]></title>
  <link href="http://ruionwriting.net/atom.xml" rel="self"/>
  <link href="http://ruionwriting.net/"/>
  <updated>2014-02-16T21:10:07+00:00</updated>
  <id>http://ruionwriting.net/</id>
  <author>
    <name><![CDATA[Rui Marques]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Improve Visual Studio 2013 performance]]></title>
    <link href="http://ruionwriting.net/blog/2014/02/14/improve-visual-studio-2013-performance/"/>
    <updated>2014-02-14T21:36:00+00:00</updated>
    <id>http://ruionwriting.net/blog/2014/02/14/improve-visual-studio-2013-performance</id>
    <content type="html"><![CDATA[<p>We all know that one of the main causes for Visual Studio to slow down is the use of many extensions simultaneously. Extra functionality means extra stuff happening under the hood, ultimately extra processing. What can I do if I the issue isn&rsquo;t caused by an extension?</p>

<p>I&rsquo;ve tested turning of something I really don&rsquo;t need and the fact is that I&rsquo;ve noticed some improvements.<!-- more --></p>

<h2>Change visual experience settings</h2>

<p>Go to <code>Tools &gt; Options</code>, in the default view of <code>Environment &gt; General</code>, there is an option, under <code>Visual experience</code> called <strong>Automatically adjust visual experience based on client performance</strong>.
<img class="center" src="http://ruionwriting.net/images/2014-02-14_VS01.png" title="Visual experience (before)" ></p>

<p>Turning this off will disable visual client visual experience and hardware graphics acceleration.</p>

<p><img class="center" src="http://ruionwriting.net/images/2014-02-14_VS02.png" title="Visual experience (after)" ></p>

<p>This will take effect after you restart Visual Studio.</p>

<h2>Startup with an empty environment</h2>

<p>This is more a personal preference. I don&rsquo;t want to wait for the default environment to load with news, latest opened projects/solutions/files, etc. Latest projects and files are always available through the <code>File</code> menu options.</p>

<p><img class="center" src="http://ruionwriting.net/images/2014-02-14_VS03.png" title="Startup (before)" ></p>

<p>Switch to empty environment and disable content download. It&rsquo;s strange to have content download enabled after switching to empty environment.</p>

<p><img class="center" src="http://ruionwriting.net/images/2014-02-14_VS04.png" title="Startup (app)" ></p>

<p>Now every time I start a new Visual Studio instance, I do that a lot during any normal work day, it loads clean and faster.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Handling ASP.NET PostBacks with URL Rewriting]]></title>
    <link href="http://ruionwriting.net/blog/2013/10/01/handling-asp-dot-net-postbacks-with-url-rewriting/"/>
    <updated>2013-10-01T22:18:00+01:00</updated>
    <id>http://ruionwriting.net/blog/2013/10/01/handling-asp-dot-net-postbacks-with-url-rewriting</id>
    <content type="html"><![CDATA[<p>Recently a collegue develop crossed with this strange error <strong><em>Validation of viewstate MAC failed&hellip;</em></strong> when posting a contacts form. Strangely the error only happened when using the re-written url off the contacts page (<code>contacts/</code>), calling <code>contacts.aspx</code> directly worked flawlessly. This is a C# port based on ScottGu&rsquo;s <a href="http://weblogs.asp.net/scottgu/archive/2007/02/26/tip-trick-url-rewriting-with-asp-net.aspx">solution</a>.<!-- more --></p>

<p>A few minutes after I’ve remembered that I had to strugle with this issue when implementing a website using url-rewriting with <a href="http://iirf.codeplex.com/">IIRF</a> (it was a requirement). The problem is that when using url-rewriting the <code>&lt;form&gt;</code> control does not render the proper url but the re-written one. The solution is to write a form control adapter and I found, at the time I had the problem, the right solution from ScottGu&rsquo;s. Since my language of choice is C# I’m going to share the solution right here:</p>

<h2>Step 1</h2>

<p><strong>Create a FormRewriterControlAdapter class</strong></p>

<figure class='code'><figcaption><span>FormRewriterControlAdapter.cs </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Data</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Configuration</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.Security</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI.HtmlControls</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI.WebControls</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Web.UI.WebControls.WebParts</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Xml.Linq</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">FormRewriterControlAdapter</span> <span class="p">:</span> <span class="n">System</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">UI</span><span class="p">.</span><span class="n">Adapters</span><span class="p">.</span><span class="n">ControlAdapter</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">Render</span><span class="p">(</span><span class="n">HtmlTextWriter</span> <span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">Render</span><span class="p">(</span><span class="k">new</span> <span class="n">RewriteFormHtmlTextWriter</span><span class="p">(</span><span class="n">writer</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">RewriteFormHtmlTextWriter</span> <span class="p">:</span> <span class="n">HtmlTextWriter</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">RewriteFormHtmlTextWriter</span><span class="p">(</span><span class="n">HtmlTextWriter</span> <span class="n">writer</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">InnerWriter</span> <span class="p">=</span> <span class="n">writer</span><span class="p">.</span><span class="n">InnerWriter</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="nf">RewriteFormHtmlTextWriter</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">TextWriter</span> <span class="n">writer</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span> <span class="p">(</span><span class="n">writer</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">InnerWriter</span> <span class="p">=</span> <span class="n">writer</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">WriteAttribute</span><span class="p">(</span><span class="kt">string</span> <span class="n">name</span><span class="p">,</span> <span class="kt">string</span> <span class="k">value</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">fEncode</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// If the attribute we are writing is the &quot;action&quot; attribute, and we are not on a sub-control,</span>
</span><span class='line'>        <span class="c1">// then replace the value to write with the raw URL of the request - which ensures that we&#39;ll</span>
</span><span class='line'>        <span class="c1">// preserve the PathInfo value on postback scenarios</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">name</span> <span class="p">==</span> <span class="s">&quot;action&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">HttpContext</span> <span class="n">context</span> <span class="p">=</span> <span class="n">HttpContext</span><span class="p">.</span><span class="n">Current</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">context</span><span class="p">.</span><span class="n">Items</span><span class="p">[</span><span class="s">&quot;ActionAlreadyWritten&quot;</span><span class="p">]</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// Because we are using an url reweriting HttpModule, we will use the</span>
</span><span class='line'>                <span class="c1">// Request.RawUrl property within ASP.NET to retrieve the origional URL</span>
</span><span class='line'>                <span class="c1">// before it was re-written.  You&#39;ll want to change the line of code below</span>
</span><span class='line'>                <span class="c1">// if you use a different URL rewriting implementation.</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// value = context.Request.RawUrl;</span>
</span><span class='line'>                <span class="k">value</span> <span class="p">=</span> <span class="n">context</span><span class="p">.</span><span class="n">Request</span><span class="p">.</span><span class="n">ServerVariables</span><span class="p">[</span><span class="s">&quot;HTTP_X_REWRITE_URL&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// Indicate that we&#39;ve already rewritten the &lt;form&gt;&#39;s action attribute to prevent</span>
</span><span class='line'>                <span class="c1">// us from rewriting a sub-control under the &lt;form&gt; control</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">context</span><span class="p">.</span><span class="n">Items</span><span class="p">[</span><span class="s">&quot;ActionAlreadyWritten&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">base</span><span class="p">.</span><span class="n">WriteAttribute</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="k">value</span><span class="p">,</span> <span class="n">fEncode</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 2</h2>

<p><strong>Add adapter to App_Browsers</strong></p>

<ol>
<li>Add <code>ASP.NET</code> folder if it does not exists;</li>
<li>Create <code>Form.browser</code>:</li>
</ol>


<figure class='code'><figcaption><span>Form.browser </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;browsers&gt;</span>
</span><span class='line'>    <span class="nt">&lt;browser</span> <span class="na">refID=</span><span class="s">&quot;Default&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;controlAdapters&gt;</span>
</span><span class='line'>            <span class="nt">&lt;adapter</span> <span class="na">controlType=</span><span class="s">&quot;System.Web.UI.HtmlControls.HtmlForm&quot;</span>
</span><span class='line'>                <span class="na">adapterType=</span><span class="s">&quot;FormRewriterControlAdapter&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/controlAdapters&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/browser&gt;</span>
</span><span class='line'><span class="nt">&lt;/browsers&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I hope you’ll find this information useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The best web application framework utopia]]></title>
    <link href="http://ruionwriting.net/blog/2013/09/24/the-best-web-application-framework-utopia/"/>
    <updated>2013-09-24T20:42:00+01:00</updated>
    <id>http://ruionwriting.net/blog/2013/09/24/the-best-web-application-framework-utopia</id>
    <content type="html"><![CDATA[<p>Many times I found IT professionals, in particular programmers, arguing about what is the best technology to adopt for a certain project or for all projects for a specific company. As a web developer with several years getting the hands dirty with .NET development I found myself frequently observing (or getting in to) discussions about the subject. I really try to avoid to get in the middle&hellip; Ok! Not really :P<!-- more --></p>

<p>The truth is that, most of the time, is hard to move away without throwing our own perspective. I did that the past and I admit that I was a bit fundamentalist defending my own perspective.</p>

<h2>Discussions like &ldquo;what is best PHP or ASP.NET?&rdquo; are as common as useless.</h2>

<p>The more I learn the more I say that all technologies, in this case web frameworks, have pro’s and conn’s and that we must choose the best having the focus on the task and on the result we want to achieve.</p>

<h2>For me ASP.NET is the best (continue reading please)</h2>

<p>Naturally because is the one I use every day. I’ve already tried others like Java or PHP but I really like the way we can develop everything using a great IDE like Visual Studio and all the nice features that .NET ecosystem (web, desktop, services, etc) delivers. I love C# and with .NET I can do almost everything, core and services, with it.</p>

<h2>So what is the best one?</h2>

<p>The are so many of them, use the one that serves you better. The most used (Perl, PHP, Java, Python, Ruby, CFML, ASP, ASP.NET, etc) have great projects and platforms well known by everyone, so if a great project is using a certain technology and it works the way it is suppose to then is using the right technology, not necessarily the best but certainly the one that performs the job.</p>

<p>A simple equation:</p>

<p><code>secure + cost effective + well documented + well supported + good performance + flexible/extensible = the right choice</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try something new: Octopress motivation]]></title>
    <link href="http://ruionwriting.net/blog/2013/09/21/try-something-new-octopress-motivation/"/>
    <updated>2013-09-21T15:28:00+01:00</updated>
    <id>http://ruionwriting.net/blog/2013/09/21/try-something-new-octopress-motivation</id>
    <content type="html"><![CDATA[<p>Real blogging, like <a href="http://www.hanselman.com/blog/">Scott Hanselman</a> does (and many others), is a serious thing that requires discipline and a personal commitment. I’ve failed to do anything even close <em>(&lt;1%???)</em> of what Scott does concerning sharing with the community real stuff that teach and empower any developer skills.<!-- more --></p>

<h2>I’m a failed blogger</h2>

<p>I&rsquo;ve a lot of excuses that sum up to NO TIME. What??? The truth is that I didn&rsquo;t really enforce a discipline to blogging and the excuse about not having spare time and patience fitted just perfectly all this time. 3 years after my first blog post I have to try something new: a personal commitment to write something useful and clear with more regularity.</p>

<h2>I want to learn more</h2>

<p>Blogging about findings/opinions (personal) related to my job daily challenges, problems and solutions is an opportunity to be a better programmer, person (yes, I work also with people) and ultimately a better professional.</p>

<h2>Why Octopress?</h2>

<p>Why not? I love <a href="http://git-scm.com/">git</a> and I want to learn new stuff so Octopress seems to be the perfect framework for it. Any Windows/.NET guy with some linux exposure will gain some extra skills in the process (empowers extra curiosity for Windows guts). Octopress it is, exiting confort zone&hellip;</p>
]]></content>
  </entry>
  
</feed>
