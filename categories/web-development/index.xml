<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Development on Rui Marques</title>
    <link>http://ruimarques.io/categories/web-development/</link>
    <description>Recent content in Web Development on Rui Marques</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>Rui Marques</copyright>
    <lastBuildDate>Mon, 12 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://ruimarques.io/categories/web-development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Keep your web project dependencies under control</title>
      <link>http://ruimarques.io/blog/2015/10/12/keep-your-web-project-dependencies-under-control/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ruimarques.io/blog/2015/10/12/keep-your-web-project-dependencies-under-control/</guid>
      <description>

&lt;p&gt;These days almost any project we work on relies on dependencies (sometimes too many) on which we need to keep our eyes on. In general - in particular for big projects - can become a challenge to keep things under control as the projects evolve over time. If we consider the most common needs for web development we know that we need to have a good number of libraries and frameworks around.&lt;/p&gt;

&lt;h2 id=&#34;why-we-need-them:ab997d5f860b7f84eff37d36fa23ccb1&#34;&gt;Why we need them?&lt;/h2&gt;

&lt;p&gt;Dependencies are not a bad thing - we need them - and it&amp;rsquo;s a way to share code, reuse and most importantly - in most cases - to avoid reinventing the wheel over and over. I&amp;rsquo;m a bit more focused on the needs around web projects but similar lessons and ideas are valid to many other contexts.&lt;/p&gt;

&lt;h2 id=&#34;when-to-introduce-a-dependency:ab997d5f860b7f84eff37d36fa23ccb1&#34;&gt;When to introduce a dependency?&lt;/h2&gt;

&lt;p&gt;Every time we need to solve a problem that is already solved and there is no existing code on the current project is in general a good idea to add an existing dependency if it not falls on &lt;em&gt;&lt;code&gt;When NOT to introduce a dependency?&lt;/code&gt;&lt;/em&gt; below. It does not matter if it is 3rd party or from our internal packages repository - let&amp;rsquo;s say NuGet/Bower for the sake of a clear example - if the problem is already solved let&amp;rsquo;s not repeat ourselves and let&amp;rsquo;s keep our focus on delivering what we are building and trying to deliver.&lt;/p&gt;

&lt;h2 id=&#34;when-not-to-introduce-a-dependency:ab997d5f860b7f84eff37d36fa23ccb1&#34;&gt;When NOT to introduce a dependency?&lt;/h2&gt;

&lt;p&gt;When the problem you need to solve is on the reach of writing a small function - even if you need to reuse it across your project - and/or when your are building a new package or library to distribute around, it is always a good idea not to introduce more dependencies.&lt;/p&gt;

&lt;p&gt;A good example is if we are building a JavaScript component/utility to share across our company projects or even to make it available as open-source, not adding external dependencies facilitates our code distribution with less friction. No one likes to add dependencies that come with a lot of ballast.&lt;/p&gt;

&lt;h2 id=&#34;wrapping-up:ab997d5f860b7f84eff37d36fa23ccb1&#34;&gt;Wrapping up&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We all know this: less dependencies is less requests, less request sizes and faster load times. No brainer.&lt;/li&gt;
&lt;li&gt;Keep the amount of dependencies as low as possible. Less moving part less risks;&lt;/li&gt;
&lt;li&gt;As the number of dependencies increases as well the amount of work required to keep them up to date will increase over time. Take AngularJS, Angular UI, ui-router - and related - as a good example;&lt;/li&gt;
&lt;li&gt;Avoid adding full libraries for additional limited functionality that we plan to use on a limited context/scope in your project;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s always a good idea to solve any problem writing the less code as possible. Adding the minimum number of dependencies as possible is also a good way to keep our feet dry.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is all based on what I&amp;rsquo;ve experienced over the years and feel free to consider as completely subjective if this does not fit your expectations or experience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Device Emulation with Google Chrome Dev/Canary</title>
      <link>http://ruimarques.io/blog/2014/03/01/device-emulation-with-google-chrome-dev-slash-canary/</link>
      <pubDate>Sat, 01 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ruimarques.io/blog/2014/03/01/device-emulation-with-google-chrome-dev-slash-canary/</guid>
      <description>

&lt;p&gt;This week, after seeing a snapshot that my friend &amp;lsquo;led&amp;rsquo; posted on Facebook about some mobile tests for one of his projects, I&amp;rsquo;ve noticed about a certain device emulation feature  on Chrome developer tools. Hum&amp;hellip;. that is interesting.&lt;/p&gt;

&lt;p&gt;A simple Google search directed me right away for something I&amp;rsquo;ve already was aware but with some new funky stuff:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/chrome-developer-tools/docs/mobile-emulation&#34;&gt;Chrome DevTools, Mobile Emulation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.chromium.org/getting-involved/dev-channel&#34;&gt;Chrome Release Channels&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the sexy photo we&amp;rsquo;ll get on how to install Chrome Canary build on Windows 8 and Chrome Dev on Arch Linux.&lt;/p&gt;

&lt;h2 id=&#34;nokia-lumia-emulation-in-action:9408c881343d1245651264cc6b93dcf9&#34;&gt;Nokia Lumia emulation in action&lt;/h2&gt;

&lt;p&gt;A simple example on Windows 8:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ruimarques.io/media/2014/device-emulation-with-google-chrome-dev-slash-canary/2014-03-01_canary_on_windows.png&#34; alt=&#34;Nokia Lumia emulation&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;installing-canary-build-on-windows:9408c881343d1245651264cc6b93dcf9&#34;&gt;Installing Canary Build on Windows&lt;/h2&gt;

&lt;p&gt;Canary Build run side-by-side with your existing Chrome installation.&lt;/p&gt;

&lt;h3 id=&#34;using-chocolatey-can-t-get-more-sweet:9408c881343d1245651264cc6b93dcf9&#34;&gt;Using Chocolatey (can&amp;rsquo;t get more sweet)&lt;/h3&gt;

&lt;p&gt;Google Chrome Canary is available through &lt;a href=&#34;http://chocolatey.org/packages?q=canary&#34;&gt;Chocolatey&lt;/a&gt;, so simply install it using &lt;code&gt;cinst&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;c:\&gt; cinst GoogleChrome.Canary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you using Windows and you don&amp;rsquo;t know what &lt;a href=&#34;http://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt; is you are missing all the fun.&lt;/p&gt;

&lt;h3 id=&#34;regular-download:9408c881343d1245651264cc6b93dcf9&#34;&gt;Regular Download&lt;/h3&gt;

&lt;p&gt;Simply &lt;a href=&#34;https://www.google.com/intl/en/chrome/browser/canary.html&#34;&gt;download&lt;/a&gt; Chrome Canary run the installer.&lt;/p&gt;

&lt;h2 id=&#34;installing-chrome-dev-on-arch-linux-linux:9408c881343d1245651264cc6b93dcf9&#34;&gt;Installing Chrome Dev on Arch Linux/linux&lt;/h2&gt;

&lt;p&gt;Chrome Dev run side-by-side with your existing Chromium installation.&lt;/p&gt;

&lt;p&gt;This is my distro of choice but for any other popular like Debian based get the packages from &lt;a href=&#34;http://www.chromium.org/getting-involved/dev-channel&#34;&gt;Chrome Release Channels&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;google-chrome-dev&lt;/code&gt; is available through &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt;, so simply install it using &lt;a href=&#34;https://wiki.archlinux.org/index.php/yaourt&#34;&gt;yaourt&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;$ yaourt -S google-chrome-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;enabling-emulation:9408c881343d1245651264cc6b93dcf9&#34;&gt;Enabling Emulation&lt;/h2&gt;

&lt;p&gt;Enable the emulation panel following simple &lt;a href=&#34;https://developers.google.com/chrome-developer-tools/docs/mobile-emulation#enable-emulation-panel&#34;&gt;instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;final-thoughts:9408c881343d1245651264cc6b93dcf9&#34;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;On this mobile era a lot of new tools for assisting web developers are arising. Could be a real challenge making compliant web sites/apps across the most popular devices. Having access to a good amount of devices at the same time for pre-launch tests/QA that also is usually a challenge. New tools are always welcome.&lt;/p&gt;

&lt;p&gt;Thank you Google for continuing to give back cool tools for the comunity and thank you &amp;lsquo;led&amp;rsquo; for the &amp;lsquo;tip&amp;rsquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Handling ASP.NET PostBacks with URL Rewriting</title>
      <link>http://ruimarques.io/blog/2013/10/01/handling-asp-dot-net-postbacks-with-url-rewriting/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ruimarques.io/blog/2013/10/01/handling-asp-dot-net-postbacks-with-url-rewriting/</guid>
      <description>

&lt;p&gt;Recently a collegue develop crossed with this strange error &lt;strong&gt;&lt;em&gt;Validation of viewstate MAC failed&amp;hellip;&lt;/em&gt;&lt;/strong&gt; when posting a contacts form. Strangely the error only happened when using the re-written url off the contacts page (&lt;code&gt;contacts/&lt;/code&gt;), calling &lt;code&gt;contacts.aspx&lt;/code&gt; directly worked flawlessly. This is a C# port based on ScottGu&amp;rsquo;s &lt;a href=&#34;http://weblogs.asp.net/scottgu/archive/2007/02/26/tip-trick-url-rewriting-with-asp-net.aspx&#34;&gt;solution&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A few minutes after I’ve remembered that I had to strugle with this issue when implementing a website using url-rewriting with &lt;a href=&#34;http://iirf.codeplex.com/&#34;&gt;IIRF&lt;/a&gt; (it was a requirement). The problem is that when using url-rewriting the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; control does not render the proper url but the re-written one. The solution is to write a form control adapter and I found, at the time I had the problem, the right solution from ScottGu&amp;rsquo;s. Since my language of choice is C# I’m going to share the solution right here:&lt;/p&gt;

&lt;h2 id=&#34;step-1-create-a-formrewritercontroladapter-class:4e4a0a997c03f39329a9e1b6ecf73233&#34;&gt;Step 1 - Create a FormRewriterControlAdapter class&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;FormRewriterControlAdapter.cs&lt;/code&gt; file:
&lt;pre&gt;&lt;code class=&#34;cs&#34;&gt;using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;&lt;/p&gt;

&lt;p&gt;public class FormRewriterControlAdapter : System.Web.UI.Adapters.ControlAdapter
{
    protected override void Render(HtmlTextWriter writer)
    {
        base.Render(new RewriteFormHtmlTextWriter(writer));
    }
}&lt;/p&gt;

&lt;p&gt;public class RewriteFormHtmlTextWriter : HtmlTextWriter
{
    public RewriteFormHtmlTextWriter(HtmlTextWriter writer) : base(writer)
    {
        this.InnerWriter = writer.InnerWriter;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public RewriteFormHtmlTextWriter(System.IO.TextWriter writer) : base (writer)
{
    base.InnerWriter = writer;
}

public override void WriteAttribute(string name, string value, bool fEncode)
{
    // If the attribute we are writing is the &amp;quot;action&amp;quot; attribute, and we are not on a sub-control,
    // then replace the value to write with the raw URL of the request - which ensures that we&#39;ll
    // preserve the PathInfo value on postback scenarios

    if (name == &amp;quot;action&amp;quot;)
    {
        HttpContext context = HttpContext.Current;

        if (context.Items[&amp;quot;ActionAlreadyWritten&amp;quot;] == null)
        {
            // Because we are using an url reweriting HttpModule, we will use the
            // Request.RawUrl property within ASP.NET to retrieve the origional URL
            // before it was re-written.  You&#39;ll want to change the line of code below
            // if you use a different URL rewriting implementation.

            // value = context.Request.RawUrl;
            value = context.Request.ServerVariables[&amp;quot;HTTP_X_REWRITE_URL&amp;quot;];

            // Indicate that we&#39;ve already rewritten the &amp;lt;form&amp;gt;&#39;s action attribute to prevent
            // us from rewriting a sub-control under the &amp;lt;form&amp;gt; control

            context.Items[&amp;quot;ActionAlreadyWritten&amp;quot;] = true;
        }
    }

    base.WriteAttribute(name, value, fEncode);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-2-add-adapter-to-app-browsers:4e4a0a997c03f39329a9e1b6ecf73233&#34;&gt;Step 2 - Add adapter to App_Browsers&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;ASP.NET&lt;/code&gt; folder if it does not exists;&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;Form.browser&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Form.browser&lt;/code&gt; file:
&lt;pre&gt;&lt;code class=&#34;xml&#34;&gt;&amp;lt;browsers&amp;gt;
    &amp;lt;browser refID=&amp;ldquo;Default&amp;rdquo;&amp;gt;
        &amp;lt;controlAdapters&amp;gt;
            &amp;lt;adapter controlType=&amp;ldquo;System.Web.UI.HtmlControls.HtmlForm&amp;rdquo;
                adapterType=&amp;ldquo;FormRewriterControlAdapter&amp;rdquo; /&amp;gt;
        &amp;lt;/controlAdapters&amp;gt;
    &amp;lt;/browser&amp;gt;
&amp;lt;/browsers&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;I hope you’ll find this information useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The best web application framework utopia</title>
      <link>http://ruimarques.io/blog/2013/09/24/the-best-web-application-framework-utopia/</link>
      <pubDate>Tue, 24 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://ruimarques.io/blog/2013/09/24/the-best-web-application-framework-utopia/</guid>
      <description>

&lt;p&gt;Many times I found IT professionals, in particular programmers, arguing about what is the best technology to adopt for a certain project or for all projects for a specific company. As a web developer with several years getting the hands dirty with .NET development I found myself frequently observing (or getting in to) discussions about the subject. I really try to avoid to get in the middle&amp;hellip; Ok! Not really :P&lt;/p&gt;

&lt;p&gt;The truth is that, most of the time, is hard to move away without throwing our own perspective. I did that the past and I admit that I was a bit fundamentalist defending my own perspective.&lt;/p&gt;

&lt;h2 id=&#34;discussions-like-what-is-best-php-or-asp-net-are-as-common-as-useless:9cb3cdccf0cb3a9802b6d69563b34359&#34;&gt;Discussions like &amp;ldquo;what is best PHP or ASP.NET?&amp;rdquo; are as common as useless.&lt;/h2&gt;

&lt;p&gt;The more I learn the more I say that all technologies, in this case web frameworks, have pro’s and conn’s and that we must choose the best having the focus on the task and on the result we want to achieve.&lt;/p&gt;

&lt;h2 id=&#34;for-me-asp-net-is-the-best-continue-reading-please:9cb3cdccf0cb3a9802b6d69563b34359&#34;&gt;For me ASP.NET is the best (continue reading please)&lt;/h2&gt;

&lt;p&gt;Naturally because is the one I use every day. I’ve already tried others like Java or PHP but I really like the way we can develop everything using a great IDE like Visual Studio and all the nice features that .NET ecosystem (web, desktop, services, etc) delivers. I love C# and with .NET I can do almost everything, core and services, with it.&lt;/p&gt;

&lt;h2 id=&#34;so-what-is-the-best-one:9cb3cdccf0cb3a9802b6d69563b34359&#34;&gt;So what is the best one?&lt;/h2&gt;

&lt;p&gt;The are so many of them, use the one that serves you better. The most used (Perl, PHP, Java, Python, Ruby, CFML, ASP, ASP.NET, etc) have great projects and platforms well known by everyone, so if a great project is using a certain technology and it works the way it is suppose to then is using the right technology, not necessarily the best but certainly the one that performs the job.&lt;/p&gt;

&lt;p&gt;A simple equation:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;secure + cost effective + well documented + well supported + good performance + flexible/extensible = the right choice&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>